@page "/orderdetail/{id:int}"

@attribute [Authorize]
@inject NavigationManager navigationManager
@inject IProcessOrderUseCase processOrderUseCase
@inject IViewOrderDetailUseCase viewOrderDetailUseCase

<h3>Chi tiết đặt hàng</h3>
@if(order != null)
{
    <p>
        <b>Customer Info:</b>
    </p>
    <p>@order.CustomerName</p>
    <p>@order.CustomerAddress</p>
    <p>@order.CustomerCity</p>
    <p>@order.CustomerStateProvince</p>
    <p>@order.CustomerCountry</p>
    <br/>

    <br/>
    <table class="table table-green">
        <thead>
            <tr>
                <th>Product Name</th>
                <th>Price</th>
                <th>Quantity</th>
            </tr>
        </thead>
        <tbody>
            @foreach (var item in order.LineItems)
            {
                <tr>
                    <td>@item.Product.Name</td>
                    <td>@item.Product.Price</td>
                    <td>@item.Quantity</td>
                </tr>
            }
        </tbody>
    </table>

    <br/>
    <button type="button" class="btn btn-primary" @onclick="HandleProcessOrder">Đặt hàng theo yêu cầu</button>
}

<style>
    .table-green {
        background-color: #fff9c4;
        color: #000;
    }
</style>

@code {
    [Parameter]
    public int Id{ get; set; }

    private Order order;

    private AuthenticationState authState;

    [CascadingParameter]
    private Task<AuthenticationState> authStateTask{ get; set; }

    protected override async Task OnInitializedAsync()
    {
        authState = await authStateTask;
    }


    protected override void OnParametersSet()
    {
        base.OnParametersSet();
        if(Id > 0)
        {
            order = viewOrderDetailUseCase.Execute(Id);
        }
    }
    private void HandleProcessOrder()
    {
        if(order != null && authState != null)
        {
            processOrderUseCase.Execute(order.OrderId.Value, authState.User.Identity.Name);
            navigationManager.NavigateTo("/outstandingorders");
        }
    }
}
